services:
  app:
    build: .
    container_name: leeta-app
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - STORAGE_TYPE=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-leeta_user}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-leeta_password}
      - DB_NAME=${POSTGRES_DB:-leeta_db}
      - DB_SSLMODE=disable
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "./geolocation-service", "--health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - leeta-network

  postgres:
    image: postgis/postgis:17-3.5-alpine
    container_name: leeta-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-leeta_db}
      POSTGRES_USER: ${POSTGRES_USER:-leeta_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-leeta_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-leeta_user} -d ${POSTGRES_DB:-leeta_db}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - leeta-network

volumes:
  postgres_data:
    driver: local

networks:
  leeta-network:
    driver: bridge